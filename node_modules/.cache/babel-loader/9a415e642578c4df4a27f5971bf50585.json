{"ast":null,"code":"import _objectSpread from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport noteService from './services/notes';\n\nvar NoteExample = function NoteExample(props) {\n  var _useState = useState(props.notes),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(\"a new note\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newNote = _useState4[0],\n      setNewNote = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showAll = _useState6[0],\n      setShowAll = _useState6[1];\n\n  useEffect(function () {\n    noteService.getAll().then(function (response) {\n      setNotes(response.data);\n    });\n  });\n  var notesToShow = showAll ? notes : notes.filter(function (note) {\n    return note.important === true;\n  });\n\n  var toggleImportanceOf = function toggleImportanceOf(id) {\n    var note = notes.find(function (n) {\n      return n.id === id;\n    });\n\n    var changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(id, changedNote).then(function (response) {\n      setNotes(notes.map(function (note) {\n        return note.id !== id ? note : response.data;\n      }));\n    });\n  };\n\n  var rows = function rows() {\n    return notesToShow.map(function (note) {\n      return React.createElement(Note, {\n        key: note.id,\n        note: note,\n        toggleImportance: function toggleImportance() {\n          return toggleImportanceOf(note.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    });\n  };\n\n  var addNote = function addNote(event) {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    var noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(function (response) {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  var handleNoteChange = function handleNoteChange(event) {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowAll(!showAll);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" save\")));\n};\n\nexport default NoteExample;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js"],"names":["React","useState","useEffect","axios","Note","noteService","NoteExample","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","response","data","notesToShow","filter","note","important","toggleImportanceOf","id","find","n","changedNote","update","map","rows","addNote","event","preventDefault","console","log","target","noteObject","content","date","Date","toISOString","Math","random","length","create","concat","handleNoteChange","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst NoteExample = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState(\"a new note\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService \n      .getAll()\n      .then(response => {\n        setNotes(response.data)\n      })\n  })\n\n  const notesToShow = showAll \n  ? notes\n  : notes.filter(note => note.important === true)\n \n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => note.id !== id ? note : response.data))\n      })\n    }\n  const rows = () => notesToShow.map(note => \n    <Note key={note.id} note={note} \n  toggleImportance={() => toggleImportanceOf(note.id)} /> )\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target )\n    const noteObject = {\n      content: newNote, \n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, \n      id: notes.length + 1\n    }\n    noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n    \n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}> \n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n       {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\"> save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteExample "]},"metadata":{},"sourceType":"module"}