{"ast":null,"code":"import _slicedToArray from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nvar promise = axios.get('http://localhost:3001/notes');\nconsole.log(promise);\nvar promise2 = axios.get('http://localhost:3001/foobar');\nconsole.log(promise2);\n\nvar NoteExample = function NoteExample(props) {\n  var _useState = useState(props.notes),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(\"a new note\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newNote = _useState4[0],\n      setNewNote = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showAll = _useState6[0],\n      setShowAll = _useState6[1];\n\n  var notesToShow = showAll ? notes : notes.filter(function (note) {\n    return note.important === true;\n  });\n\n  var rows = function rows() {\n    return notesToShow.map(function (note) {\n      return React.createElement(\"li\", {\n        key: note.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" \", note.content);\n    });\n  };\n\n  var addNote = function addNote(event) {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    var noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  var handleNoteChange = function handleNoteChange(event) {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowAll(!showAll);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" save\")));\n};\n\nexport default NoteExample;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js"],"names":["React","useState","ReactDOM","axios","promise","get","console","log","promise2","NoteExample","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","rows","map","id","content","addNote","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","length","concat","handleNoteChange","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nconst promise = axios.get('http://localhost:3001/notes')\nconsole.log(promise) \nconst promise2 = axios.get('http://localhost:3001/foobar')\nconsole.log(promise2)\n\nconst NoteExample = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState(\"a new note\")\n  const [showAll, setShowAll] = useState(true)\n\n  const notesToShow = showAll \n  ? notes\n  : notes.filter(note => note.important === true)\n\n  const rows = () => notesToShow.map(note => \n     <li key={note.id}> {note.content}</li>)\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target )\n    const noteObject = {\n      content: newNote, \n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, \n      id: notes.length + 1\n    }\n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n    \n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}> \n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n       {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\"> save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteExample "]},"metadata":{},"sourceType":"module"}