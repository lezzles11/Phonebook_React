{"ast":null,"code":"import _objectSpread from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport './styles.css';\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newNote = _useState4[0],\n      setNewNote = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showAll = _useState6[0],\n      setShowAll = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  useEffect(function () {\n    noteService.getAll().then(function (initialNotes) {\n      return setNotes(initialNotes);\n    });\n  }, []);\n  var notesToShow = showAll ? notes : notes.filter(function (note) {\n    return note.important;\n  });\n\n  var rows = function rows() {\n    return notesToShow.map(function (note) {\n      return React.createElement(Note, {\n        key: note.id,\n        note: note,\n        toggleImportance: function toggleImportance() {\n          return toggleImportanceOf(note.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    });\n  };\n\n  var handleNoteChange = function handleNoteChange(event) {\n    setNewNote(event.target.value);\n  };\n\n  var addNote = function addNote(event) {\n    event.preventDefault();\n    var noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(function (data) {\n      setNotes(notes.concat(data));\n      setNewNote('');\n    });\n  };\n\n  var toggleImportanceOf = function toggleImportanceOf(id) {\n    var note = notes.find(function (n) {\n      return n.id === id;\n    });\n\n    var changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(id, changedNote).then(function (returnedNote) {\n      setNotes(notes.map(function (note) {\n        return note.id !== id ? note : returnedNote;\n      }));\n    }).catch(function (error) {\n      setErrorMessage(\"Note '\".concat(note.content, \"' was already removed from server\"));\n      setTimeout(function () {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(function (n) {\n        return n.id !== id;\n      }));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowAll(!showAll);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"save\")), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js"],"names":["React","useState","useEffect","Note","Notification","Footer","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","notesToShow","filter","note","important","rows","map","id","toggleImportanceOf","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","date","Date","toISOString","Math","random","length","create","data","concat","find","n","changedNote","update","returnedNote","catch","error","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes' \nimport './styles.css'\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes))\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n  \n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(data => {\n        setNotes(notes.concat(data))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n      \n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}