{"ast":null,"code":"import _slicedToArray from \"/Users/lesleycheung/Desktop/Phonebook_React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nvar NoteExample = function NoteExample(props) {\n  var _useState = useState(props.notes),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(\"a new note\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newNote = _useState4[0],\n      setNewNote = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showAll = _useState6[0],\n      setShowAll = _useState6[1];\n\n  var hook = function hook() {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(function (response) {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  console.log('render', notes.length, 'notes');\n  var notesToShow = showAll ? notes : notes.filter(function (note) {\n    return note.important === true;\n  });\n\n  var rows = function rows() {\n    return notesToShow.map(function (note) {\n      return React.createElement(Note, {\n        key: note.id,\n        note: note,\n        toggleImportance: function toggleImportance() {\n          return toggleImportanceOf(note.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    });\n  };\n\n  var addNote = function addNote(event) {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    var noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(function (response) {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  var handleNoteChange = function handleNoteChange(event) {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setShowAll(!showAll);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" save\")));\n};\n\nexport default NoteExample;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/Phonebook_React/src/NoteExample.js"],"names":["React","useState","useEffect","ReactDOM","axios","NoteExample","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","length","notesToShow","filter","note","important","rows","map","id","toggleImportanceOf","addNote","event","preventDefault","target","noteObject","content","date","Date","toISOString","Math","random","post","concat","handleNoteChange","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBACHL,QAAQ,CAACK,KAAK,CAACC,KAAP,CADL;AAAA;AAAA,MACtBA,KADsB;AAAA,MACfC,QADe;;AAAA,mBAECP,QAAQ,CAAC,YAAD,CAFT;AAAA;AAAA,MAEtBQ,OAFsB;AAAA,MAEbC,UAFa;;AAAA,mBAGCT,QAAQ,CAAC,IAAD,CAHT;AAAA;AAAA,MAGtBU,OAHsB;AAAA,MAGbC,UAHa;;AAK/B,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAX,IAAAA,KAAK,CACFY,GADH,CACO,6BADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAP,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACD,KANH;AAOD,GATD;;AAUAjB,EAAAA,SAAS,CAACW,IAAD,EAAO,EAAP,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAK,CAACa,MAA5B,EAAoC,OAApC;AAEE,MAAMC,WAAW,GAAGV,OAAO,GACzBJ,KADyB,GAEzBA,KAAK,CAACe,MAAN,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB;AAAA,GAAjB,CAFF;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMJ,WAAW,CAACK,GAAZ,CAAgB,UAAAH,IAAI;AAAA,aACrC,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACI,EAAhB;AAAoB,QAAA,IAAI,EAAEJ,IAA1B;AACF,QAAA,gBAAgB,EAAE;AAAA,iBAAMK,kBAAkB,CAACL,IAAI,CAACI,EAAN,CAAxB;AAAA,SADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADqC;AAAA,KAApB,CAAN;AAAA,GAAb;;AAIA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,KAAK,CAACE,MAApC;AACA,QAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEzB,OADQ;AAEjB0B,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBb,MAAAA,SAAS,EAAEc,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBZ,MAAAA,EAAE,EAAEpB,KAAK,CAACa,MAAN,GAAe;AAJF,KAAnB;AAMAhB,IAAAA,KAAK,CAACoC,IAAN,CAAW,6BAAX,EAA0CP,UAA1C,EACChB,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBV,MAAAA,QAAQ,CAACD,KAAK,CAACkC,MAAN,CAAavB,QAAQ,CAACC,IAAtB,CAAD,CAAR;AACAT,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAJD;AAKD,GAdD;;AAeA,MAAMgC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACZ,KAAD,EAAW;AAClChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAK,CAACE,MAAN,CAAaW,KAAzB;AACAjC,IAAAA,UAAU,CAACoB,KAAK,CAACE,MAAN,CAAaW,KAAd,CAAV;AAED,GAJD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM/B,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,OAAO,GAAG,WAAH,GAAiB,KADhC,CADF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEc,IAAI,EADN,CAPF,EAUE;AAAM,IAAA,QAAQ,EAAEI,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAEpB,OAAd;AACE,IAAA,QAAQ,EAAEiC,gBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAVF,CADF;AAmBD,CAjED;;AAmEA,eAAerC,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios';\n\n\nconst NoteExample = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState(\"a new note\")\n  const [showAll, setShowAll] = useState(true)\n\nconst hook = () => {\n  console.log('effect')\n  axios\n    .get('http://localhost:3001/notes')\n    .then(response => {\n      console.log('promise fulfilled')\n\n      setNotes(response.data)\n    })\n}\nuseEffect(hook, [])\nconsole.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll \n  ? notes\n  : notes.filter(note => note.important === true)\n\n  const rows = () => notesToShow.map(note => \n    <Note key={note.id} note={note} \n  toggleImportance={() => toggleImportanceOf(note.id)} /> )\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target )\n    const noteObject = {\n      content: newNote, \n      date: new Date().toISOString(),\n      important: Math.random() > 0.5, \n      id: notes.length + 1\n    }\n    axios.post('http://localhost:3001/notes', noteObject)\n    .then(response => {\n      setNotes(notes.concat(response.data))\n      setNewNote('')\n    })\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n    \n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}> \n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n       {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\"> save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteExample "]},"metadata":{},"sourceType":"module"}